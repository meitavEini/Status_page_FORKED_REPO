<<<<<<< HEAD
version: "3.8"

services:
  db:
    image: postgres:14
    container_name: postgres-db
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_USER: statuspage
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: statuspage
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  redis:
    image: redis:6
    container_name: redis-cache
    restart: always
    expose:
      - "6379"
    networks:
      - my_network

  app:
    build: .
    container_name: statuspage-app
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://statuspage:securepassword@db:5432/statuspage
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    networks:
      - my_network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my_network

volumes:
  postgres_data:

networks:
  my_network:
=======
version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./recording-rules.yml:/etc/prometheus/recording-rules.yml  # הוספת הקובץ
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/main.json
    volumes:
      - grafana_data:/var/lib/grafana
      - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./dashboards:/var/lib/grafana/dashboards
networks:
  monitoring:
    driver: bridge

volumes:
  grafana_data:
>>>>>>> fb1aa2a (Create docker-compose.yml)
